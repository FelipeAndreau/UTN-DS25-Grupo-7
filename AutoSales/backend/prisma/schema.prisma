// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  admin
  viewer
}

model Usuario {
  id             String         @id @default(uuid())
  nombre         String
  email          String         @unique
  password       String
  rol            Rol
  activo         Boolean        @default(true)
  creadoEn       DateTime       @default(now())
  actualizadoEn  DateTime       @updatedAt
  configuracion  Configuracion?
}


enum TipoCliente {
  Particular
  Empresa
}

enum EstadoCliente {
  Activo
  En_proceso
  Financiamiento
  Potencial
}

model Cliente {
  id            String         @id @default(uuid())
  nombre        String
  email         String         @unique
  telefono      String
  tipo          TipoCliente
  estado        EstadoCliente
  actividad     String
  creadoEn      DateTime       @default(now())
  actualizadoEn DateTime       @updatedAt
}

enum EstadoVehiculo {
  Disponible
  Reservado
  Vendido
}

model Vehiculo {
  id          Int      @id @default(autoincrement())
  marca       String
  modelo      String
  anio        Int
  precio      Float
  estado      EstadoVehiculo @default(Disponible)
  imagen      String
  descripcion String
  creadoEn      DateTime       @default(now())
  actualizadoEn DateTime       @updatedAt
}

enum Tema {
  claro
  oscuro
}

model Configuracion {
  id        String   @id @default(uuid())
  idioma    String   @default("es")
  tema      Tema     @default(claro)
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId String   @unique
  creadoEn  DateTime @default(now())
  actualizadoEn DateTime @updatedAt
}

